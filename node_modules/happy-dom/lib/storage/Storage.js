/**
 * Storage.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Storage
 */
export default class Storage {
    /**
     * Returns length.
     *
     * @returns Length.
     */
    get length() {
        return Object.keys(this).length;
    }
    /**
     * Returns name of the nth key.
     *
     * @param index Index.
     * @returns Name.
     */
    key(index) {
        const name = Object.keys(this)[index];
        return name === undefined ? null : name;
    }
    /**
     * Sets item.
     *
     * @param name Name.
     * @param item Item.
     */
    setItem(name, item) {
        this[name] = item;
    }
    /**
     * Returns item.
     *
     * @param name Name.
     * @returns Item.
     */
    getItem(name) {
        return this[name] === undefined ? null : this[name];
    }
    /**
     * Removes item.
     *
     * @param name Name.
     */
    removeItem(name) {
        delete this[name];
    }
    /**
     * Clears storage.
     */
    clear() {
        const keys = Object.keys(this);
        for (const key of keys) {
            delete this[key];
        }
    }
}
//# sourceMappingURL=Storage.js.map